on:
  push:
    branches: main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - uses: actions/checkout@v2

      - name: Query dependencies
        run: |
          install.packages("remotes")
          install.packages('renv')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache renv package Windows
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
         path: ~\AppData\Local\renv
         key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
         restore-keys: |
           ${{ runner.os }}-renv-
           
      - name: Check R_LIBS_USER
        run: |
          print(Sys.getenv("R_LIBS_USER"))
        shell: Rscript {0}
           
      - name: Install dependencies
        run: |
          if (file.exists("renv.lock")) {
            renv::restore()
          } else {
            remotes::install_deps(dependencies = TRUE)
          }
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
